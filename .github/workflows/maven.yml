name: Java CI with Maven

on:
  push:
    branches: [ "main", "release/*" ]
    tags: [ "release/*" ]

env:
  DEPLOY: ${{ startsWith(github.ref, 'refs/heads/release/') && 'false' || 'true' }}
  ENVIRONMENT: ${{ contains(github.ref, '/release/') && 'prod' || 'dev' }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Get application version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Build with Maven
        run: mvn -B $MVN_TARGET -DbuildType=$MVN_BUILD_TYPE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MVN_TARGET: ${{ env.DEPLOY == 'true' && 'deploy' || 'package' }}
          MVN_BUILD_TYPE: ${{ env.ENVIRONMENT == 'prod' && 'release' || 'dev' }}
      - name: Notify server
        if: ${{ env.DEPLOY == 'true' }}
        run: |
          curl -L -f -s -S \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer ${{ secrets.WEBHOOK_TOKEN }}' \
            -d '{"application":"${{ github.repository }}","environment":"${{ env.ENVIRONMENT }}","release":"${{ env.VERSION }}"}' \
            -X POST '${{ secrets.WEBHOOK_URL }}'
        continue-on-error: true